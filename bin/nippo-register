#!/usr/bin/env ruby

require 'nippo'
require 'optparse'

module Nippo
  TASK_TITLE = '定常業務'
  TASK_CODE = '03000800159'

  def self.register_task(opts)
    server = Nippo::Server.new({
      :server => opts[:server],
      :auth_user => opts[:auth_u],
      :auth_passwd => opts[:auth_p],
      :login_user => opts[:login_u],
      :login_passwd => opts[:login_p],
      :day => opts[:day],
      :month => opts[:month],
      :year => opts[:year],
      :code => opts[:task_code],
      :title => opts[:task_title],
      :context => Nippo::Task.get_context,
    })
    begin
      if server.login
        server.set_am_task
        server.set_rest
        server.set_pm_task
        server.submit

        puts "Successfull to upload"
      else
        puts "ERROR: failed to login, please check your id/password."
      end
    rescue Exception => e
      p e
      puts e.backtrace
    end
  end
end

options = {}
parser = OptionParser.new do |opt|
  opt.banner = <<-EOS
Usage: register [parameters]

Parameters (All parameters are mandatory for registry):
  EOS
  #opt.banner = "All options are compulsory for registry"
	opt.on('-d [day]', '--day', 'the day to register (DEFAULT: today)') { |value|
    options[:day] = value }
	opt.on('-m [mon]', '--month', 'the month to register (DEFAULT: current month)') { |value|
    options[:month] = value }
	opt.on('-y [year]', '--year', 'the year to register (DEFAULT: current year)') { |value|
    options[:year] = value }
	opt.on('-s hostaddr', '--server', 'host address of Nippo servalueice') { |value|
    options[:server] = value }
	opt.on('-U uid', '--basic_user', 'userid of BASIC authentication') { |value|
    options[:auth_u] = value }
	opt.on('-P passwd', '--basic_password', 'password to access Nippo servalueice') {|value|
    options[:auth_p] = value }
	opt.on('-u uid', '--login_user', 'userid of your-self to login') { |value|
    options[:login_u] = value }
	opt.on('-p passwd', '--login_password', 'password which is related to your account') { |value|
    options[:login_p] = value }
	opt.on('-c code', '--task_code', 'task-code which is configured in company (DEFAULT: 03000800159)') { |value|
    options[:task_code] = value }
	opt.on('-t title', '--task_title', 'describes the title of creating task (DEFAULT: 定常業務)') { |value|
    options[:task_title] = value }

	opt.parse! ARGV
end

DEFAULT_KEYS = [:day, :month, :year, :server, :auth_u, :auth_p, :login_u, :login_p, :task_code, :task_title]
def set_default_params(opts)
  ret = {}
  DEFAULT_KEYS.each do |key|
    value = opts[key]

    ret[key] = case key
    when :day
      value != nil ? value : Time.now.day
    when :month
      value != nil ? value : Time.now.month
    when :year
      value != nil ? value : Time.now.year
    when :task_title
      value != nil ? value : Nippo::TASK_TITLE
    when :task_code
      value != nil ? value : Nippo::TASK_CODE
    else
      value
    end
  end

  ret
end
def is_valid? opts
  DEFAULT_KEYS.all? do |key|
    opts[key] != nil
  end
end

options = set_default_params(options)
unless is_valid?(options)
  puts parser.help
  exit 1
end

Nippo.register_task(options)
